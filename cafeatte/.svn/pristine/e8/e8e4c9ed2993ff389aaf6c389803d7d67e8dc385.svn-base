package com.cafeatte.userCafe.controller;

import java.net.URLEncoder;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.websocket.Session;

import com.cafeatte.main.Controller;
import com.cafeatte.main.Execute;
import com.cafeatte.main.Service;
import com.cafeatte.member.dto.LoginDTO;
import com.cafeatte.userCafe.dto.UserCafeDTO;
import com.cafeatte.util.io.FileUtil;
import com.cafeatte.util.page.PageObject;
import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;
import com.webjjang.util.ImageResizing;

//서비스로 보낸다.

public class UserCafeController implements Controller {

	// 변수타입은 인터페이스 Service (다 상속받고있다.)
	private Service listService;
	private Service viewService;
	private Service writeService;
	private Service updateService;
	private Service deleteService;

	// 생성자...
	public UserCafeController(Service listService, Service viewService, Service writeService, Service updateService,
			Service deleteService) {
		this.listService = listService;
		this.viewService = viewService;
		this.writeService = writeService;
		this.updateService = updateService;
		this.deleteService = deleteService;
	}

	//첨부파일용 변수 
	int size = 100*1024*1024;
	String path = "/upload/userCafe/image";
	String noStr = "";//글번호 (기존no랑 이름 다르게 선언)
	String perPageNumStr = ""; //(기존 perPageNum과 이름 다르게 선언)
	String deleteFileName = null;//지울파일
	HttpSession session;
	@Override
	public String execute(HttpServletRequest request, HttpServletResponse response, String uri) throws Exception {

		System.out.println("userCafeController.execute()");

		// 공통변수
		String jsp = "";
		PageObject pageobject = PageObject.getInstance(request.getParameter("page"),
				request.getParameter("perPageNum"));

		// Session에서 id가져오기
		// 검색했으면 pageobject의 key, word에 넣어준다.
		String key = request.getParameter("key");
		String word = request.getParameter("word");
		if (word != null) {
			pageobject.setKey(key);
			pageobject.setWord(word);
		}

		switch (uri) {
		case "/userCafe/list.do":// list.do요청이 들어오면
			request.setAttribute("pageObject", pageobject);
			// listservice를 실행해서 "list"라는 이름으로 request에 담겠다. 그리고 리스트로 보낸다.
			request.setAttribute("list", Execute.service(listService, pageobject));
			jsp = "userCafe/list";
			break;

		case "/userCafe/view.do":
			// view요청들어오면 글번호, cnt(list.jsp에서 글 클릭하면 cnt=1이 되게 셋팅해놓음) 받아서 viewservice실행시켜서
			// "view"이름에 담는다. 뷰로 보낸다.
			int no = Integer.parseInt(request.getParameter("no"));
			int cnt = Integer.parseInt(request.getParameter("cnt"));
			request.setAttribute("dto", Execute.service(viewService, no, cnt));
			jsp = "userCafe/view";
			break;

		// ???
		case "/userCafe/writeForm.do":
			jsp = "/userCafe/writeForm";
			break;

		case "/userCafe/write.do":
			// write요청 들어오면 글쓴뒤 리스트로 리다이렉트시킨다.
			Execute.service(writeService, getDTO(request));
			jsp = "redirect:list.do?page=1&perPageNum=" + perPageNumStr;
			break;

		case "/userCafe/updateForm.do":
			no=Integer.parseInt(request.getParameter("no"));
			//view에있는 내용을 복사해와서 수정할수있게함...
			request.setAttribute("dto", Execute.service(viewService, no, 0));
			jsp = "userCafe/updateForm";

		case "/userCafe/update.do":
			UserCafeDTO dto = getDTO(request);
			Execute.service(updateService, dto);
			//전달된 이미지 있으면 원래것 지운다.
			if(dto.getFileName()!=null)
				FileUtil.deleteFile(FileUtil.realPath(request, deleteFileName));
			jsp = "redirect:view.do?no=" + noStr + "&cnt=0" + "&page=" + pageobject.getPage() + "&perPageNum="
					+ pageobject.getPerPageNum()
					+ ((pageobject.getWord() != null && !pageobject.getWord().equals("")) ? "&key="
					+ pageobject.getKey() + "&word=" + URLEncoder.encode(pageobject.getWord(), "utf-8") : "");
			System.out.println("UserCafeController.execute().jsp:" + jsp);
			break;

		case "/userCafe/delete.do":
			Execute.service(deleteService, Integer.parseInt(request.getParameter("no")));
			//서버에 올린 파일 지우기
			FileUtil.deleteFile(FileUtil.realPath(request, request.getParameter("deleteFileName")));
			jsp = "redirect:list.do?" + "page=1" + "&perPageNum=" + request.getParameter("perPageNum");
			break;

		default:
			break;
		}

		System.out.println("UserCafeController.execute().jsp:" + jsp);
		return jsp;
	}// execute() end

	// write용 method
	// ()파라메터를 받아서 userCafeDTO타입의 getDTO 메소드 실행.
	// {}처리문 : 사용자가입력한(title, fileName, content) 내용 dto에 받아서 리턴함...
	private UserCafeDTO getDTO(String title, String fileName, String content, String id) {
		UserCafeDTO dto = new UserCafeDTO();
		dto.setTitle(title);
		dto.setFileName(fileName);
		dto.setContent(content);
		dto.setId(id);
		return dto;
	}

	// update용 method
	private UserCafeDTO getDTO(int no, String title, String fileName, String content, String id) {
		UserCafeDTO dto = getDTO(title, fileName, content, id);
		//메소드이름 같은데 파라메터 다르면 - overload. 위에 글쓰기용 dto에 있는 title 등 받아오고  거기에 없는 no는 밑에 추가해서 셋팅해줌.
		dto.setNo(no);
		return dto;
	}

	private UserCafeDTO getDTO(HttpServletRequest request) throws Exception{
		
		//파일업로드되는 서버의 절대위치 (하드디스크위치) 설정
		String uploadPath = FileUtil.realPath(request, path);
		System.out.println("uploadpath:"+uploadPath);
		MultipartRequest multi = new MultipartRequest(
				request, uploadPath, size, "utf-8", new DefaultFileRenamePolicy());
		
		//db에 저장할 정보 : 위치+서버의파일명
		String fileName = path + multi.getFilesystemName("fileName");
		System.out.println("UserCafeController.execute().fileName:"+fileName);
		
		//리사이즈된파일복사
		if(fileName !=null && !fileName.equals("") && !fileName.equals(path + "null"))
			ImageResizing.imageResizing(uploadPath, multi.getFilesystemName("fileName"), "s_", 300);

		//한페이지에 표시할 데이터개수
		perPageNumStr = multi.getParameter("perPageNum");		
		noStr = multi.getParameter("no");
		
		//글번호가 들어오면 - 글수정
		if(noStr!=null &&!noStr.equals("")) {
			deleteFileName = multi.getParameter("deleteFile");
			return getDTO(Integer.parseInt(noStr), multi.getParameter("title"), fileName, multi.getParameter("content"), multi.getParameter("id"));
		}
		//글번호가 들어오지 않으면 - 글쓰기
//		session.0
		return getDTO(multi.getParameter("title"), fileName, multi.getParameter("content"), multi.getParameter("id"));
	}
}
